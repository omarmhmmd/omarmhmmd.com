---
import { Image } from "astro:assets";
const { frontmatter } = Astro.props;
import BaseLayout from "./BaseLayout.astro";
---

<style>
  .frontMatter {
    position: sticky;
    display: block;
    top: var(--m-1);
    z-index: 1;
    margin-left: var(--m-1);
    max-width:calc(var(--maxWidth)/1.75);
  }
  .frontMatter a {
    text-decoration: none;
  }
  .frontMatter a:hover {
    text-decoration: underline;
  }
  @media (max-width: 1172px) {
    .frontMatter {
      position: relative;
      top: 0;
    }
  }
  .link-container {
    display: flex;
    flex-direction: column;
    margin-bottom: var(--m-2);
    align-items: flex-start; /* Prevent stretching to container width */
  }

  a {
    display: inline-block; /* Ensures the anchor size matches its content */
    text-decoration: underline;
    padding: 0; /* Remove any unnecessary padding */
    margin: 0; /* Remove unnecessary margins */
  }


  :global( .footnotes ol li p a) {
    word-break: break-all;
  }

  img {
    width: 100%;
    height: auto;
    margin: var(--m-2);
    z-index: 1;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin-bottom: var(--m-2);
  }
  li {
    margin-right: 4px;
  }
  p {
    font-weight: bold;
  }
  .mdContainer {
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-top: var(--m-2);
    margin-bottom: var(--m-1);
  }
  @media (max-width: 1172px) {
    .mdContainer {
      margin: var(--m-1);
      margin-top: 0;
    }
  }
  .md {
    display: flex;
    flex-direction: column;
    max-width: var(--maxWidth);
    z-index: 1;

  }
  .btnContainer {
    margin: var(--m-2) 0;
    display: flex;
    flex-direction: row;
    gap: var(--m-3);
    width: 100%;
    justify-content: center;
  }
  .btnContainer a {
    text-decoration: none;
  }
  .btnContainer a:hover {
    text-decoration: underline;
  }
  button {
    background-color: var(--bgColor);
    border: none;
    font-family: var(--mainFont);
    padding: 0;
    font-size: 16px;
    color: black;
  }
  button:hover {
    cursor: pointer;
    text-decoration: underline;
  }
</style>

<BaseLayout
  title={frontmatter.description}
  description={frontmatter.meta}
  image={frontmatter.image.src}
/>
<div class="container">
  <div class="frontMatter">
    <ul>
      <li>{frontmatter.title}</li>
      {
        frontmatter.tags.map((tag: any, index: number) => (
          <li>
            <a href={`/index/${tag}`}>[{tag}]</a>
          </li>
        ))
      }
      <!-- <li>{new Date(frontmatter.pubDate).getFullYear()}</li> -->
    </ul>
    <p>{frontmatter.description}</p>
    <div class="link-container" style={`display: ${frontmatter.links?.length ? "flex" : "none"}`}>
      {
        frontmatter.links.map((link: any, index: number) => (
          <a href={link} target="_blank" rel="noopener noreferrer">
            {new URL(link).hostname}
          </a>
        ))
      }
    </div>
    <div><a href="/">[‚Üê]</a></div>
  </div>
  <div class="mdContainer">
    <Image
      src={frontmatter.image}
      alt={frontmatter.imgAlt}
    />
    <article class="md">
      <slot />
      <hr />
      <div class="btnContainer">
        <a class="backBtn" href="/">[back]</a>
        <button class="back-to-top" id="backToTop">[top]</button>
      </div>
    </article>
  </div>
  <!-- Back to Top Button -->
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Back to Top Button functionality
    const backToTopBtn = document.getElementById("backToTop");

    if (backToTopBtn) {
      window.addEventListener("scroll", () => {
        // Show button when scrolled down
        if (window.scrollY > 300) {
          backToTopBtn.style.display = "block";
        } else {
          backToTopBtn.style.display = "none";
        }
      });

      backToTopBtn.addEventListener("click", () => {
        window.scrollTo({ top: 0, behavior: "auto" });
      });
    }
    // Select all anchor tags
    const anchorTags = document.querySelectorAll(".md a:not(.backBtn)");

    anchorTags.forEach((anchor) => {
      const href = anchor.getAttribute("href");

      // Skip anchor links (e.g., href="#some-id")
      if (href && !href.startsWith("#")) {
        anchor.setAttribute("target", "_blank");
        anchor.setAttribute("rel", "noopener noreferrer");
      }
    });
  });
</script>
